# Dark Mode

```{r, include = FALSE}
library(ggplot2)
library(ggthemes)
```

## Demo

Toggle dark and light mode to see the plot switch. Inspired by [Marc-Aurèle Rivière](https://twitter.com/mariviere1/status/1521534422826237955).

<div class="light-mode">

```{r, echo = FALSE}
g <- ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
  geom_violin()
g + theme_solarized(light = TRUE)
```

</div>

<div class="dark-mode">

```{r, echo = FALSE}
g + theme_solarized(light = FALSE)
```

</div>

## Setup

Edit the _quarto.yml file to add your light and dark themes, plus .scss files for each

```yml
format:
  html:
    theme:
      light: [flatly, light.scss]
      dark: [darkly, dark.scss]
```

Create .scss files for light and dark mode. Set blocks with the class .light-mode to `display: none;` in dark mode, and blocks with the class .dark-mode to `display: none;` in light mode.

light.scss:

```css
/*-- scss:defaults --*/

/*-- scss:rules --*/
.light-mode { display: block; }
.dark-mode { display: none; }
```

dark.scss:

```css
/*-- scss:defaults --*/

/*-- scss:rules --*/
.dark-mode { display: block; }
.light-mode { display: none; }
```

## Switching


```{r}
g <- ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
  geom_violin()
```

Wrap light-themed content in 

```html
<div class="light-mode">
...code...
</div>
```

and dark-themed content in 

```html
<div class="dark-mode">
...code...
</div>
```

<div class="light-mode">

```{r, class.output="light-mode"}
g + theme_solarized(light = TRUE)
```

</div>

<div class="dark-mode">

```{r}
g + theme_solarized(light = FALSE)
```

</div>

## Auto-theme

```{r}
library(knitr)
knit_print.ggplot <- function (x, options, ...) {
  cat('\n<div class="dark-mode">\n')
  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = FALSE))
  cat('</div>\n')
  cat('<div class="light-mode">\n')
  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = TRUE))
  cat('</div>\n\n')
}
registerS3method("knit_print", "ggplot", knit_print.ggplot)
```

This only works if you set results='asis' in the code chunk for the plot. I'll see if I can fix this. 

```{r, results='asis'}
g
```


