# Dark Mode

```{r, include = FALSE}
library(ggplot2)
library(ggthemes)
```

## Demo

Toggle dark and light mode to see the plot switch. Inspired by [Marc-Aurèle Rivière](https://twitter.com/mariviere1/status/1521534422826237955).


```{r, echo = FALSE}
#| classes: light-mode
g <- ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
  geom_violin() +
  labs(title = "Diamond price by cut")

g + theme_solarized(light = TRUE)
```

```{r, echo = FALSE}
#| classes: dark-mode
g + theme_solarized(light = FALSE)
```


## Setup

Edit the _quarto.yml file to add your light and dark themes, plus .scss files for each

```yml
format:
  html:
    theme:
      light: [flatly, light.scss]
      dark: [darkly, dark.scss]
```

Create .scss files for light and dark mode. Set blocks with the class .light-mode to `display: none;` in dark mode, and blocks with the class .dark-mode to `display: none;` in light mode.

light.scss:

```css
/*-- scss:defaults --*/

/*-- scss:rules --*/
.light-mode { display: block; }
.dark-mode { display: none; }
```

dark.scss:

```css
/*-- scss:defaults --*/

/*-- scss:rules --*/
.dark-mode { display: block; }
.light-mode { display: none; }
```

## Switching


```{r}
g <- ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
  geom_violin() +
  labs(title = "Diamond price by cut")
```

Add `#| classes: light-mode` or `#| classes: dark-mode` to the code chunks to display their output conditionally.

```{r}
#| classes: light-mode
g + theme_solarized(light = TRUE)
```


```{r}
#| classes: dark-mode
g + theme_solarized(light = FALSE)
```


## Auto-theme

If you add this code at the top of your script, it will automatically theme plots for you without the code above (you still need the setup). I'm using the ggthemes `theme_solarized()` in light and dark versions, but you can add any theme you like or a custom theme.

```{r}
library(knitr)
knit_print.ggplot <- function (x, options, ...) {
  cat('\n<div class="dark-mode">\n')
  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = FALSE))
  cat('</div>\n')
  cat('<div class="light-mode">\n')
  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = TRUE))
  cat('</div>\n\n')
}
registerS3method("knit_print", "ggplot", knit_print.ggplot)
```

This only works if you set `results='asis'` in the code chunk for the plot. I'll see if I can fix this. 

```{r, results='asis'}
g
```


