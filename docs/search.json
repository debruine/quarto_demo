[
  {
    "objectID": "dark_mode.html#demo",
    "href": "dark_mode.html#demo",
    "title": "quarto_demo",
    "section": "Demo",
    "text": "Demo\nToggle dark and light mode to see the plot switch. Inspired by Marc-Aurèle Rivière."
  },
  {
    "objectID": "dark_mode.html#setup",
    "href": "dark_mode.html#setup",
    "title": "quarto_demo",
    "section": "Setup",
    "text": "Setup\nEdit the _quarto.yml file to add your light and dark themes, plus .scss files for each\nformat:\n  html:\n    theme:\n      light: [flatly, light.scss]\n      dark: [darkly, dark.scss]\nCreate .scss files for light and dark mode. Set blocks with the class .light-mode to display: none; in dark mode, and blocks with the class .dark-mode to display: none; in light mode.\nlight.scss:\n/*-- scss:defaults --*/\n\n/*-- scss:rules --*/\n.light-mode { display: block; }\n.dark-mode { display: none; }\ndark.scss:\n/*-- scss:defaults --*/\n\n/*-- scss:rules --*/\n.dark-mode { display: block; }\n.light-mode { display: none; }"
  },
  {
    "objectID": "dark_mode.html#switching",
    "href": "dark_mode.html#switching",
    "title": "quarto_demo",
    "section": "Switching",
    "text": "Switching\n\ng <- ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +\n  geom_violin() +\n  labs(title = \"Diamond price by cut\")\n\nAdd #| classes: light-mode or #| classes: dark-mode to the code chunks to display their output conditionally.\n\ng + theme_solarized(light = TRUE)\n\n\n\n\n\ng + theme_solarized(light = FALSE)"
  },
  {
    "objectID": "dark_mode.html#auto-theme",
    "href": "dark_mode.html#auto-theme",
    "title": "quarto_demo",
    "section": "Auto-theme",
    "text": "Auto-theme\nIf you add this code at the top of your script, it will automatically theme plots for you without the code above (you still need the setup). I’m using the ggthemes theme_solarized() in light and dark versions, but you can add any theme you like or a custom theme.\n\nlibrary(knitr)\nknit_print.ggplot <- function (x, options, ...) {\n  cat('\\n<div class=\"dark-mode\">\\n')\n  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = FALSE))\n  cat('</div>\\n')\n  cat('<div class=\"light-mode\">\\n')\n  ggplot2:::print.ggplot(x + ggthemes::theme_solarized(light = TRUE))\n  cat('</div>\\n\\n')\n}\nregisterS3method(\"knit_print\", \"ggplot\", knit_print.ggplot)\n\nThis only works if you set results='asis' in the code chunk for the plot. I’ll see if I can fix this.\ng"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto demo",
    "section": "",
    "text": "This website contains my explorations of Quarto.\n\nReplicating df_print\nDark mode conditional chunks"
  },
  {
    "objectID": "table.html#code",
    "href": "table.html#code",
    "title": "Table printing demo",
    "section": "Code",
    "text": "Code\nThese functions should override knitr::knit_print() for data frames, but wasn’t working at all until I learned in the knit_print vignette that you have to use registerS3method().\n\ndf_print: paged\n\nlibrary(knitr)\n# print everything as paged ----\nknit_print.data.frame <- function (x, options, ...) {\n  rmarkdown::paged_table(x, options) |>\n    rmarkdown:::print.paged_df()\n}\nregisterS3method(\"knit_print\", \"data.frame\", knit_print.data.frame)\n\n\ndata.frame(x = rnorm(5), y = LETTERS[1:5])\n\n\n  \n\n\n\n\n\ndf_print: kable\n\nlibrary(knitr)\n# print everything as kable ----\nknit_print.data.frame <- function (x, options, ...) {\n  knitr::kable(x) |> knitr::knit_print(options, ...)\n}\nregisterS3method(\"knit_print\", \"data.frame\", knit_print.data.frame)\n\n\ndata.frame(x = rnorm(5), y = LETTERS[1:5])\n\n\n\n\nx\ny\n\n\n\n\n0.8714116\nA\n\n\n-1.2573082\nB\n\n\n0.2134558\nC\n\n\n0.5614545\nD\n\n\n1.2866240\nE\n\n\n\n\n\n\n\ndf_print: custom\nPrints tables with 10 or fewer rows using kableExtra::kable() and longer tables with DT::datatable() (unless overridden by options). Includes chunk options for:\n\ndigits (defaults to getOption(\"digits\"))\nrownames (defaults to FALSE)\npageLength (defaults to 10)\nescape (defaults to TRUE)\ntable.cap\n\n\nlibrary(knitr)\n\n# useful function for options\n`%||%` <- function(l, r) {\n  if (is.null(l)) r else l\n}\n\n# super-customised table printing ----\nknit_print.data.frame <- function (x, options, ...) {\n  # get options\n  digits <- options$digits %||% getOption(\"digits\")\n  rownames <- options$rownames %||% FALSE\n  pageLength <- options$pageLength %||% 10 \n  escape <- options$escape %||% TRUE\n  caption <- options$table.cap \n  \n  # use DT for longer tables in html\n  if (nrow(x) > pageLength & knitr::is_html_output()) {\n    numeric_cols <- sapply(x, is.numeric) |> which() |> names()\n    dt <- DT::datatable(x, \n                        rownames = rownames,\n                        caption = caption,\n                        escape = escape,\n                        width = \"100%\",\n                        height = \"auto\",\n                        options = list(pageLength = pageLength),\n                        selection = \"none\")\n    if (length(numeric_cols) > 0) {\n      dt <- DT::formatRound(dt, \n                            columns = numeric_cols,\n                            digits = digits)\n    }\n    knitr::knit_print(dt, options)\n  } else {\n    # use kableExtra::kable for PDFs or shorter tables\n    k <- kableExtra::kable(x, \n                      digits = digits, \n                      row.names = rownames, \n                      caption = caption,\n                      escape = escape) |>\n      kableExtra::kable_styling(\n        full_width = options$full_width,\n        bootstrap_options = c(\"striped\", \"hover\")\n      )\n    \n    if (knitr::is_html_output()) {\n        k <- c(\"<div class=\\\"kable-table\\\">\", k, \"</div>\") |>\n          paste(collapse = \"\\n\")\n    }\n    \n    knitr::asis_output(k)\n  }\n}\nregisterS3method(\"knit_print\", \"data.frame\", knit_print.data.frame)"
  },
  {
    "objectID": "table.html#test-custom-df_print",
    "href": "table.html#test-custom-df_print",
    "title": "Table printing demo",
    "section": "Test custom df_print",
    "text": "Test custom df_print\nMake data.frame and tbl_df object with 5 and 26 rows.\n\ndf5 <- data.frame(x = rnorm(5), y = LETTERS[1:5])\ndf26 <- data.frame(x = rnorm(26), y = LETTERS)\ntbl5 <- tibble::tibble(x = rnorm(5), y = LETTERS[1:5])\ntbl26 <- tibble::tibble(x = rnorm(26), y = LETTERS)\n\n\nData frame - 5 rowsData frame - 26 rowsTibble - 5 rowsTibble - 26 rows\n\n\nShould be displayed with kableExtra::kable().\n\ndf5\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    -0.3798755 \n    A \n  \n  \n    0.1282596 \n    B \n  \n  \n    -0.5076981 \n    C \n  \n  \n    1.1918280 \n    D \n  \n  \n    -0.5441806 \n    E \n  \n\n\n\n\n\n\n\nShould be displayed with DT::datatable().\n\ndf26\n\n\n\n\n\n\n\nShould be displayed with kableExtra::kable()\n\ntbl5\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    0.4232167 \n    A \n  \n  \n    -1.6696265 \n    B \n  \n  \n    -1.1632183 \n    C \n  \n  \n    -1.5340426 \n    D \n  \n  \n    0.0058346 \n    E \n  \n\n\n\n\n\n\n\nShould be displayed with DT::datatable()\n\ntbl26"
  },
  {
    "objectID": "table.html#option-tests",
    "href": "table.html#option-tests",
    "title": "Table printing demo",
    "section": "Option Tests",
    "text": "Option Tests\nTesting options in the r chunk header.\n\ndigitsrownamestable.cappageLengthescapefull_width\n\n\nSet the number of digits to display in numeric columns. Defaults to getOption(\"digits\").\n\n# digits = 3\ntbl5\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    0.423 \n    A \n  \n  \n    -1.670 \n    B \n  \n  \n    -1.163 \n    C \n  \n  \n    -1.534 \n    D \n  \n  \n    0.006 \n    E \n  \n\n\n\n\n\n\n# digits = 4\ntbl26\n\n\n\n\n\n\n\nrownames are FALSE by default\n\n# rownames = TRUE\ntbl5\n\n\n\n \n  \n      \n    x \n    y \n  \n \n\n  \n    1 \n    0.4232167 \n    A \n  \n  \n    2 \n    -1.6696265 \n    B \n  \n  \n    3 \n    -1.1632183 \n    C \n  \n  \n    4 \n    -1.5340426 \n    D \n  \n  \n    5 \n    0.0058346 \n    E \n  \n\n\n\n\n\n\n# rownames = TRUE\ntbl26\n\n\n\n\n\n\n\nTable captions.\n\ntbl5\n\n\n\nThis is my table caption for a tibble with 5 rows\n \n  \n    x \n    y \n  \n \n\n  \n    0.4232167 \n    A \n  \n  \n    -1.6696265 \n    B \n  \n  \n    -1.1632183 \n    C \n  \n  \n    -1.5340426 \n    D \n  \n  \n    0.0058346 \n    E \n  \n\n\n\n\n\n\ntbl26\n\n\n\n\n\n\n\nSet the page length for DT, if the table is <= to that, will display as kable.\n\n# pageLength = 3, so should be a DT\ntbl5\n\n\n\n\n\n\n# pageLength = 30, so should be a kable\ntbl26\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    0.4863401 \n    A \n  \n  \n    -0.7041072 \n    B \n  \n  \n    -0.6327804 \n    C \n  \n  \n    -1.1796038 \n    D \n  \n  \n    1.1722446 \n    E \n  \n  \n    0.2972028 \n    F \n  \n  \n    -0.4070911 \n    G \n  \n  \n    -0.1344147 \n    H \n  \n  \n    -1.4500125 \n    I \n  \n  \n    -0.5560723 \n    J \n  \n  \n    -1.9220258 \n    K \n  \n  \n    -1.5566694 \n    L \n  \n  \n    0.5841214 \n    M \n  \n  \n    0.2713283 \n    N \n  \n  \n    -0.0076356 \n    O \n  \n  \n    0.6900089 \n    P \n  \n  \n    0.4510192 \n    Q \n  \n  \n    -1.4868795 \n    R \n  \n  \n    -0.3088038 \n    S \n  \n  \n    0.1337109 \n    T \n  \n  \n    -0.7626969 \n    U \n  \n  \n    -0.9072097 \n    V \n  \n  \n    -0.7754248 \n    W \n  \n  \n    0.4547507 \n    X \n  \n  \n    0.7000024 \n    Y \n  \n  \n    -0.0522336 \n    Z \n  \n\n\n\n\n\n\n\nescape is TRUE by default. Set to FALSE to use html or latex in tables.\n\n# escape = FALSE\ntibble::tibble(styles = c(\"<i>italics</i>\", \"<b>bold</b>\"))\n\n\n\n \n  \n    styles \n  \n \n\n  \n    italics \n  \n  \n    bold \n  \n\n\n\n\n\n\n# escape = FALSE\ntibble::tibble(styles = rep(c(\"<i>italics</i>\", \"<b>bold</b>\"), 10))\n\n\n\n\n\n\n\nFor kable only, defaults to TRUE for html and FALSE for pdf.\n\n# full_width = TRUE\ntbl5\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    0.4232167 \n    A \n  \n  \n    -1.6696265 \n    B \n  \n  \n    -1.1632183 \n    C \n  \n  \n    -1.5340426 \n    D \n  \n  \n    0.0058346 \n    E \n  \n\n\n\n\n\n\n# full_width = FALSE\ntbl5\n\n\n\n \n  \n    x \n    y \n  \n \n\n  \n    0.4232167 \n    A \n  \n  \n    -1.6696265 \n    B \n  \n  \n    -1.1632183 \n    C \n  \n  \n    -1.5340426 \n    D \n  \n  \n    0.0058346 \n    E"
  }
]